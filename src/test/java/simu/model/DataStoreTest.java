package simu.model;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.io.TempDir;
import simu.model.Exceptions.CannotLoadFileException;

import java.io.File;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;

class DataStoreTest {

    @TempDir
    static private File tempDir;
    static private File testFile;

    @BeforeAll
    static void initialize() {
        testFile = new File(tempDir, "temp.simuc");
        DataStore.clearInstance();
        ResultData resultData = new ResultData(1, 1, 1, 1, 1, 1, 1);
        ResultData resultData1 = new ResultData(2, 2, 2, 2, 2, 2, 2);
        DataStore.getInstance().addResult(resultData);
        DataStore.getInstance().addResult(resultData1);
        DataStore.getInstance().setSimulationSettings(new SimulationSettings("1", "1", "1", "1", "1", 1));
    }

    @Test
    void loadAndSaveFromFile() throws CannotLoadFileException {
        /*
            Test comments generated by LLMs for better readability
         */

        // Arrange
        DataStore beforeSave = DataStore.getInstance().copy();

        // Act 1: Save and Reload
        DataStore.getInstance().saveToFileAs(testFile);
        DataStore.clearInstance();
        DataStore.loadFromFile(testFile);

        // Assert 1: Reloaded data matches saved data
        assertEquals(beforeSave, DataStore.getInstance());

        // Act 2: Modify Results
        ResultData resultData = new ResultData(3, 2, 1, 2, 2, 2, 2);
        DataStore.getInstance().addResult(resultData);

        // Assert 2: Adding result changes state
        assertNotEquals(beforeSave, DataStore.getInstance());

        // Act 3: Remove Result
        DataStore.getInstance().removeResult(resultData);

        // Assert 3: Removing result restores original state
        assertEquals(beforeSave, DataStore.getInstance());

        // Act 4: Change simulation settings
        DataStore.getInstance().setSimulationSettings(
                new SimulationSettings("2", "2", "2", "1", "2", 2)
        );

        // Assert 4: Changed settings alter state
        assertNotEquals(beforeSave, DataStore.getInstance());

        // Act 5: Clear all data
        DataStore.clearInstance();

        // Assert 5: Cleared instance differs from saved state
        assertNotEquals(beforeSave, DataStore.getInstance());
    }

}