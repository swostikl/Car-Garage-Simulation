package simu.view;

import javafx.fxml.FXMLLoader;
import javafx.scene.Group;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.ScrollPane;
import javafx.stage.Stage;
import simu.controller.VisualizeController;

import java.awt.*;
import java.io.IOException;

public class VisualizeView {

    private VisualizeController controller;

    public Stage init() throws IOException {
        Stage stage = new Stage();
        stage.setTitle("Simulation");
        FXMLLoader loader = new FXMLLoader(getClass().getResource("/view/visualize_view.fxml"));
        Parent root = loader.load();
        controller = loader.getController();
        Group content = new Group(root);
        ScrollPane scrollPane = new ScrollPane(content);
        scrollPane.setFitToHeight(true);
        scrollPane.setFitToWidth(true);
        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);
        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);

        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();

        Scene scene = new Scene(scrollPane, dimension.getWidth() / 2, dimension.getHeight() / 2);

        double[] scale = {1.0};

        // handle shortcut + scroll zoom (Generated by ChatGPT)
        content.setOnScroll(event -> {
            if (event.isControlDown() || event.isShortcutDown() || event.isDirect()) {
                if (event.getDeltaY() > 0) {
                    scale[0] *= 1.1;
                } else {
                    scale[0] /= 1.1;
                }

                // clamp zoom
                scale[0] = Math.max(0.2, Math.min(scale[0], 5.0));

                root.setScaleX(scale[0]);
                root.setScaleY(scale[0]);
                event.consume();
            }
        });

        // Handle pinch-to-zoom gestures (trackpad) (Generated by ChatGPT)
        content.setOnZoom(event -> {
            scale[0] *= event.getZoomFactor();

            // clamp zoom
            scale[0] = Math.max(0.2, Math.min(scale[0], 5.0));

            root.setScaleX(scale[0]);
            root.setScaleY(scale[0]);
            event.consume();
        });

        stage.setScene(scene);
        stage.show();
        return stage;
    }

    public VisualizeController getController() {
        return controller;
    }
}
